{"version":3,"file":"static/js/351.c3ba8edf.chunk.js","mappings":"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","sources":["components/shared/Box/Box.styled.js","components/shared/Button/Button.styled.js","components/shared/Button/Button.jsx","components/shared/FormField/FormField.styled.js","components/shared/FormField/FormField.jsx","components/shared/Title/Title.styled.js","components/shared/Section/Section.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import { BiColumns } from 'react-icons/bi';\r\nimport styled from 'styled-components';\r\nimport {\r\n  color,\r\n  typography,\r\n  space,\r\n  layout,\r\n  flexbox,\r\n  grid,\r\n  background,\r\n  border,\r\n  position,\r\n  shadow,\r\n  variant,\r\n  flex,\r\n} from 'styled-system';\r\n\r\nconst Box = styled('div')(\r\n  color,\r\n  typography,\r\n  space,\r\n  layout,\r\n  flexbox,\r\n  grid,\r\n  background,\r\n  border,\r\n  position,\r\n  shadow,\r\n  variant({\r\n    variants: {\r\n      container: {\r\n        width: 'container',\r\n        ml: 'auto',\r\n        mr: 'auto',\r\n        pl: [5],\r\n        pr: [5],\r\n      },\r\n\r\n      section: {\r\n        pt: [5],\r\n        pb: [5],\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nexport default Box;\r\n","import styled from 'styled-components';\r\nimport theme from 'theme';\r\n\r\nexport const StyledButton = styled('button')`\r\n  display: inline-flex;\r\n  font-family: ${theme.fonts.body};\r\n  font-size: ${theme.fontSizes.m};\r\n  font-weight: ${theme.fontWeights.regular};\r\n  padding: ${theme.space[3]};\r\n  color: ${theme.colors.secondary};\r\n  background-color: ${p =>\r\n    p.disabled ? theme.colors.muted : theme.colors.accent};\r\n  cursor: pointer;\r\n  border: ${theme.borders.none};\r\n  border-radius: ${theme.radii.normal};\r\n  box-shadow: ${theme.shadow.low};\r\n  transition-property: all;\r\n  transition-duration: 250ms;\r\n  transition-timing-function: ease-in-out;\r\n\r\n  :hover:not(:disabled) {\r\n    background-color: ${theme.colors.accent};\r\n    box-shadow: ${theme.shadow.medium};\r\n    scale: 1.1;\r\n  }\r\n`;\r\n\r\nexport const Loader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  animation: spin 1s linear 0s infinite;\r\n\r\n  @keyframes spin {\r\n    from {\r\n      transform: rotate(0deg);\r\n    }\r\n\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ButtonText = styled.span`\r\n  margin-left: ${p => (p.isIconThere ? theme.space[3] : theme.space[0])};\r\n`;\r\n","import { PropTypes } from 'prop-types';\r\nimport { StyledButton, ButtonText, Loader } from './Button.styled';\r\nimport { BiLoaderCircle } from 'react-icons/bi';\r\n\r\nconst Button = ({\r\n  icon: Icon = null,\r\n  type = 'button',\r\n  disabled = false,\r\n  isLoading = false,\r\n  children,\r\n  iconSize,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <StyledButton type={type} disabled={disabled} onClick={onClick}>\r\n      {isLoading && Icon && (\r\n        <Loader>\r\n          <BiLoaderCircle size={iconSize} />\r\n        </Loader>\r\n      )}\r\n      {!isLoading && Icon && <Icon size={iconSize} />}\r\n      <ButtonText isIconThere={Icon}>{children}</ButtonText>\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  icon: PropTypes.func,\r\n  type: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  isLoading: PropTypes.bool,\r\n  children: PropTypes.string.isRequired,\r\n  iconSize: PropTypes.number,\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\nimport theme from 'theme';\r\nimport { Field } from 'formik';\r\n\r\nexport const Label = styled.label`\r\n  position: absolute;\r\n  bottom: 40px;\r\n  font-size: ${theme.fontSizes.s};\r\n  margin-bottom: ${theme.space[1]};\r\n  color: ${theme.colors.background};\r\n`;\r\n\r\nexport const Input = styled(Field)`\r\n  font-size: ${theme.fontSizes.m};\r\n  padding: ${theme.space[3]};\r\n  border: ${theme.borders.none};\r\n  border-radius: ${theme.radii.normal};\r\n  background-color: ${theme.colors.primary};\r\n  width: 220px;\r\n\r\n  ::placeholder {\r\n    font-family: ${theme.fonts.body};\r\n    color: ${theme.colors.secondary};\r\n  }\r\n`;\r\n\r\nexport const Error = styled.p`\r\n  display: inline;\r\n  position: absolute;\r\n  top: calc(${theme.space[3]} + 34px);\r\n  right: 0;\r\n  font-size: ${theme.fontSizes.m};\r\n  color: red;\r\n`;\r\n","import { ErrorMessage } from 'formik';\r\n\r\nimport { Input, Label, Error } from './FormField.styled';\r\nimport Box from 'components/shared/Box';\r\nimport theme from 'theme';\r\n\r\nconst FormField = ({ type, label, icon: Icon, placeholder }) => {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\" mb={[5]} position=\"relative\">\r\n      <Box mr={[3]}>\r\n        <Icon size={34} color={theme.colors.accent} />\r\n      </Box>\r\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"flex-start\">\r\n        <Label htmlFor={type}>{label}</Label>\r\n        <Input id={type} name={type} type={type} placeholder={placeholder} />\r\n        <ErrorMessage name={type} component={Error} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FormField;\r\n","import styled from 'styled-components';\r\nimport theme from 'theme';\r\n\r\nconst Title = styled.h3`\r\n  text-align: center;\r\n  font-size: ${theme.fontSizes.xl};\r\n  font-weight: ${theme.fontWeights.bold};\r\n  color: ${theme.colors.accent};\r\n  margin-bottom: ${theme.space[4]};\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport default Title;\r\n","import Box from 'components/shared/Box';\r\nimport Title from 'components/shared/Title/Title.styled';\r\nimport { PropTypes } from 'prop-types';\r\nimport theme from 'theme';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <Box variant=\"section\" as=\"section\" backgroundColor=\"background\">\r\n      <Box variant=\"container\">\r\n        {title && <Title>{title}</Title>}\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import styled from 'styled-components';\r\nimport theme from 'theme';\r\nimport { Form } from 'formik';\r\n\r\nexport const LoginForm = styled(Form)`\r\n  display: flex;\r\n  width: 300px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: ${theme.space[5]} ${theme.space[4]};\r\n  background-color: ${theme.colors.secondary};\r\n  border-radius: ${theme.radii.high};\r\n`;\r\n","import { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Notify } from 'notiflix';\r\n\r\nimport { IoIosMail } from 'react-icons/io';\r\nimport { RiLockPasswordFill } from 'react-icons/ri';\r\nimport { RiLoginBoxFill } from 'react-icons/ri';\r\n\r\nimport { useUserLogInMutation } from 'redux/userAPI';\r\nimport { setAuthHeader } from 'redux/axiosBaseQuery';\r\nimport { setAuth } from 'redux/authSlice';\r\n\r\nimport FormField from 'components/shared/FormField';\r\nimport { LoginForm as Form } from './LoginForm.styled';\r\nimport Button from 'components/shared/Button';\r\n\r\nconst ValidationSchema = Yup.object().shape({\r\n  email: Yup.string().email('Must be valid email').required('Required'),\r\n  password: Yup.string()\r\n    .min(8, 'Must be at least 8 characters')\r\n    .required('Required'),\r\n});\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [userLogIn, { data, isError, isLoading, isSuccess }] =\r\n    useUserLogInMutation();\r\n\r\n  if (isSuccess) {\r\n    navigate('/contacts');\r\n    Notify.success(`Woohoo! Glad to see you again ${data.user.name}! `);\r\n    setAuthHeader(data.token);\r\n    dispatch(setAuth(data));\r\n  }\r\n\r\n  if (isError) {\r\n    Notify.failure(`What a shame! User login error.`);\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        password: '',\r\n      }}\r\n      validationSchema={ValidationSchema}\r\n      onSubmit={({ email, password }, { resetForm }) => {\r\n        const user = {\r\n          email: email.trim(),\r\n          password: password.trim(),\r\n        };\r\n\r\n        userLogIn(user);\r\n        resetForm();\r\n      }}\r\n    >\r\n      <Form>\r\n        <FormField\r\n          type=\"email\"\r\n          label=\"Email\"\r\n          icon={IoIosMail}\r\n          placeholder=\"mail@mail.com\"\r\n        />\r\n        <FormField\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          icon={RiLockPasswordFill}\r\n          placeholder=\"********\"\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          isLoading={isLoading}\r\n          icon={RiLoginBoxFill}\r\n          disabled={isLoading ? true : false}\r\n          children=\"Log in\"\r\n          iconSize={20}\r\n        />\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import LoginForm from 'components/LoginForm';\r\nimport Section from 'components/shared/Section';\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <Section>\r\n      <LoginForm />\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["styled","color","typography","space","layout","flexbox","grid","background","border","position","shadow","variant","variants","container","width","ml","mr","pl","pr","section","pt","pb","StyledButton","theme","p","disabled","Loader","ButtonText","isIconThere","icon","Icon","type","isLoading","children","iconSize","onClick","size","Label","Input","Field","Error","label","placeholder","Box","display","alignItems","mb","flexDirection","htmlFor","id","name","component","title","as","backgroundColor","LoginForm","Form","ValidationSchema","Yup","shape","email","required","password","min","dispatch","useDispatch","navigate","useNavigate","useUserLogInMutation","userLogIn","data","isError","isSuccess","Notify","user","setAuthHeader","token","setAuth","initialValues","validationSchema","onSubmit","resetForm","trim","FormField","IoIosMail","RiLockPasswordFill","Button","RiLoginBoxFill","Section"],"sourceRoot":""}