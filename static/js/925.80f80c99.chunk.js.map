{"version":3,"file":"static/js/925.80f80c99.chunk.js","mappings":"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","sources":["components/shared/FormField/FormField.styled.js","components/shared/FormField/FormField.jsx","components/shared/Title/Title.styled.js","components/shared/Section/Section.jsx","components/RegistartionForm/RegisterForm.styled.js","components/RegistartionForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport theme from 'theme';\r\nimport { Field } from 'formik';\r\n\r\nexport const Label = styled.label`\r\n  position: absolute;\r\n  bottom: 40px;\r\n  font-size: ${theme.fontSizes.s};\r\n  margin-bottom: ${theme.space[1]};\r\n  color: ${theme.colors.background};\r\n`;\r\n\r\nexport const Input = styled(Field)`\r\n  font-size: ${theme.fontSizes.m};\r\n  padding: ${theme.space[3]};\r\n  border: ${theme.borders.none};\r\n  border-radius: ${theme.radii.normal};\r\n  background-color: ${theme.colors.primary};\r\n  width: 220px;\r\n\r\n  ::placeholder {\r\n    font-family: ${theme.fonts.body};\r\n    color: ${theme.colors.secondary};\r\n  }\r\n`;\r\n\r\nexport const Error = styled.p`\r\n  display: inline;\r\n  position: absolute;\r\n  top: calc(${theme.space[3]} + 34px);\r\n  right: 0;\r\n  font-size: ${theme.fontSizes.m};\r\n  color: red;\r\n`;\r\n","import { ErrorMessage } from 'formik';\r\n\r\nimport { Input, Label, Error } from './FormField.styled';\r\nimport Box from 'components/shared/Box';\r\nimport theme from 'theme';\r\n\r\nconst FormField = ({ type, label, icon: Icon, placeholder }) => {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\" position=\"relative\">\r\n      <Box mr={[3]}>\r\n        <Icon size={34} color={theme.colors.accent} />\r\n      </Box>\r\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"flex-start\">\r\n        <Label htmlFor={type}>{label}</Label>\r\n        <Input id={type} name={type} type={type} placeholder={placeholder} />\r\n        <ErrorMessage name={type} component={Error} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FormField;\r\n","import styled from 'styled-components';\r\nimport theme from 'theme';\r\n\r\nconst Title = styled.h3`\r\n  text-align: center;\r\n  font-size: ${theme.fontSizes.xl};\r\n  font-weight: ${theme.fontWeights.bold};\r\n  color: ${theme.colors.accent};\r\n  margin-bottom: ${theme.space[4]};\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport default Title;\r\n","import Box from 'components/shared/Box';\r\nimport Title from 'components/shared/Title/Title.styled';\r\nimport { PropTypes } from 'prop-types';\r\nimport theme from 'theme';\r\n\r\nconst Section = ({ title, children, variant = 'container' }) => {\r\n  return (\r\n    <Box variant=\"section\" as=\"section\" backgroundColor=\"background\">\r\n      <Box variant={variant}>\r\n        {title && <Title>{title}</Title>}\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import styled from 'styled-components';\r\nimport theme from 'theme';\r\nimport { Form } from 'formik';\r\n\r\nexport const RegisterForm = styled(Form)`\r\n  display: flex;\r\n  width: 300px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: ${theme.space[5]} ${theme.space[4]};\r\n  background-color: ${theme.colors.secondary};\r\n  border-radius: ${theme.radii.high};\r\n`;\r\n","import { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Notify } from 'notiflix';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { IoMdPerson, IoIosMail } from 'react-icons/io';\r\nimport { RiLockPasswordFill } from 'react-icons/ri';\r\nimport { ImUserPlus } from 'react-icons/im';\r\n\r\nimport { useUserSignUpMutation } from 'redux/userAPI';\r\nimport { setAuthHeader } from 'redux/axiosBaseQuery';\r\nimport { setAuth } from 'redux/authSlice';\r\n\r\nimport Button from 'components/shared/Button';\r\nimport Box from 'components/shared/Box';\r\nimport FormField from 'components/shared/FormField';\r\nimport { RegisterForm as Form } from './RegisterForm.styled';\r\nimport { useEffect } from 'react';\r\n\r\nconst ValidationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(2, 'Too Short!')\r\n    .max(20, 'Too Long!')\r\n    .required('Required'),\r\n  email: Yup.string().email('Must be valid email').required('Required'),\r\n  password: Yup.string()\r\n    .min(8, 'Must be at least 8 characters')\r\n    .required('Required'),\r\n});\r\n\r\nconst RegisterForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [userSignUp, { data, isError, isLoading, isSuccess }] =\r\n    useUserSignUpMutation();\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      Notify.success(\r\n        `Welcome aboard, ${data.user.name}! Registration successful!`\r\n      );\r\n      setAuthHeader(data.token);\r\n      dispatch(setAuth(data));\r\n    }\r\n\r\n    if (isError) {\r\n      Notify.failure(`What a shame! Some problems happend.`);\r\n    }\r\n  }, [data, dispatch, isError, isSuccess]);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n      }}\r\n      validationSchema={ValidationSchema}\r\n      onSubmit={({ name, email, password }, { resetForm }) => {\r\n        const user = {\r\n          name: name.trim(),\r\n          email: email.trim(),\r\n          password: password.trim(),\r\n        };\r\n\r\n        // console.log(user);\r\n        userSignUp(user);\r\n        resetForm();\r\n      }}\r\n    >\r\n      <Form>\r\n        <Box mb={[5]}>\r\n          <FormField\r\n            type=\"name\"\r\n            label=\"Name\"\r\n            icon={IoMdPerson}\r\n            placeholder=\"Name\"\r\n          />\r\n        </Box>\r\n        <Box mb={[5]}>\r\n          <FormField\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            icon={IoIosMail}\r\n            placeholder=\"mail@mail.com\"\r\n          />\r\n        </Box>\r\n        <Box mb={[5]}>\r\n          <FormField\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            icon={RiLockPasswordFill}\r\n            placeholder=\"********\"\r\n          />\r\n        </Box>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          isLoading={isLoading}\r\n          icon={ImUserPlus}\r\n          disabled={isLoading ? true : false}\r\n          children=\"Registration\"\r\n          iconSize={20}\r\n        />\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import RegisterForm from 'components/RegistartionForm/RegisterForm';\r\nimport Section from 'components/shared/Section';\r\n\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getAuth } from 'redux/selectors';\r\n\r\nconst RegisterPage = () => {\r\n  const { token } = useSelector(getAuth);\r\n\r\n  return (\r\n    <>\r\n      {token === '' ? (\r\n        <Section>\r\n          <RegisterForm />\r\n        </Section>\r\n      ) : (\r\n        <Navigate to=\"/contacts\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["Label","styled","theme","Input","Field","Error","type","label","Icon","icon","placeholder","Box","display","alignItems","position","mr","size","color","flexDirection","htmlFor","id","name","component","title","children","variant","as","backgroundColor","RegisterForm","Form","ValidationSchema","Yup","shape","min","max","required","email","password","dispatch","useDispatch","useUserSignUpMutation","userSignUp","data","isError","isLoading","isSuccess","useEffect","Notify","user","setAuthHeader","token","setAuth","initialValues","validationSchema","onSubmit","resetForm","trim","mb","FormField","IoMdPerson","IoIosMail","RiLockPasswordFill","Button","ImUserPlus","disabled","iconSize","useSelector","getAuth","Section","to"],"sourceRoot":""}